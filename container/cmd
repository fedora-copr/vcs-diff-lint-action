#! /bin/bash -e

# Rebuild quay.io bump: 1

rootdir=$(pwd)
result=true

error() { echo "DIFF_LINT_ERROR: $*" >&2 ; }

is_true() {
    [[ $# -le 0 ]] && return 1

    case "$1" in
      [tT] | [yY] | [yY][eE][sS] | [oO][nN] | [tT][rR][uU][eE] | 1)
        return 0
        ;;

      *)
        return 1
        ;;
    esac
}

debug_mode=false
if is_true "$INPUT_DEBUG" || is_true "$RUNNER_DEBUG"; then
    debug_mode=true
    (
        echo "== GitHub ENV VARS =="
        env | grep -e ^GITHUB -e ^INPUT_
        echo "== GitHub Context =="
        echo "$INPUT_DEBUG_ALL_DATA"
    ) >&2
    set -x
fi

linter_options=()
set_linter_options()
{
    if $debug_mode; then
        linter_options+=( --log-level=debug )
    fi
    for tag in $INPUT_LINTER_TAGS; do
        linter_options+=( --linter-tag "$tag" )
    done
}

populate_sarif_data()
{
    vcs-diff-lint "${linter_options[@]}" | \
    csgrep \
        --strip-path-prefix ./ \
        --prepend-path-prefix "$1/" \
        >> "$rootdir/output.sarif.err" \
    || true
}

analyze_subdir()
{
    echo
    echo "## Linting in '$1' subdirectory ##"
    echo
    cd "$rootdir/$1" 2>/dev/null || {
        error "Directory '$1' not found"
        result=false
        return
    }
    populate_sarif_data "$1"
    vcs-diff-lint --print-fixed-errors "${linter_options[@]}" || result=false
}

if test -n "$INPUT_INSTALL_RPM_PACKAGES"; then
    # shellcheck disable=SC2086
    dnf install -y $INPUT_INSTALL_RPM_PACKAGES
fi

if test "$GITHUB_EVENT_NAME" = 'pull_request'; then
    git config --global --add safe.directory '*'
    git config --global advice.detachedHead false
    git config --global init.defaultBranch main

    echo "## New code: $INPUT_PULL_REQUEST_HEAD ##"
    (
        $debug_mode || exec &>/dev/null
        git fetch origin "+$INPUT_PULL_REQUEST_HEAD:refs/remotes/pull-requests/pr-detached-$INPUT_PULL_REQUEST_ID"
        git checkout "$INPUT_PULL_REQUEST_HEAD"
    )

    # We don't want to rebase on top of the current upstream's head; the line
    # numbers would be shifted and the provided output would be misleading.

    # Get the last commit before this PR.
    last_committed=$(git rev-parse "HEAD~$INPUT_PULL_REQUEST_COMMITS")
    echo "## Old code: $last_committed ##"
    linter_options+=( --compare-against "$last_committed" )

    test -z "$INPUT_SUBDIRECTORY" || INPUT_SUBDIRECTORIES=$INPUT_SUBDIRECTORY
    test -z "$INPUT_SUBDIRECTORIES" && INPUT_SUBDIRECTORIES=.

    set_linter_options
    for subdir in $INPUT_SUBDIRECTORIES; do
        GIT_LFS_SKIP_SMUDGE=1 \
        analyze_subdir "$subdir"
    done

    (
        # Return back to the previous git-sha1, upload-sarif action doesn't
        # really like mismatches.
        $debug_mode || exec &>/dev/null
        git checkout "$GITHUB_SHA"
    )
else
    touch "$rootdir/output.sarif.err"
fi

csgrep \
    --mode=sarif \
    --set-scan-prop="tool:vcs-diff-lint" \
    --set-scan-prop="tool-url:https://github.com/fedora-copr/vcs-diff-lint#readme" \
< "$rootdir"/output.sarif.err > "$rootdir"/output.sarif

echo "sarif=output.sarif" >> "${GITHUB_OUTPUT}"

$result
